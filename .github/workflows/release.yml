name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

    - name: Build release artifacts
      run: mvn clean package -DskipTests

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: AutoHeal Locator ${{ github.ref }}
        body: |
          ## AutoHeal Locator Release ${{ github.ref }}

          ### Features
          - AI-powered element healing with multiple provider support
          - Dual-layer caching system (Memory + Persistent)
          - Comprehensive reporting and metrics
          - Selenium WebDriver integration

          ### Installation
          ```xml
          <dependency>
              <groupId>com.autoheal</groupId>
              <artifactId>autoheal-locator</artifactId>
              <version>${{ steps.get_version.outputs.VERSION }}</version>
          </dependency>
          ```

          ### Quick Start
          ```java
          AutoHealLocator autoHeal = AutoHealManager.createMinimalAutoHeal(driver);
          WebElement element = autoHeal.findElement("css-selector", "description");
          ```
        draft: false
        prerelease: false

    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/autoheal-locator-${{ steps.get_version.outputs.VERSION }}.jar
        asset_name: autoheal-locator-${{ steps.get_version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive

    - name: Upload Sources JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/autoheal-locator-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_name: autoheal-locator-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_content_type: application/java-archive